{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","id","name","email","username","className","src","alt","CardList","robots","map","robot","SearchBox","search","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","console","log","Component","App","useState","searchfield","setSearchField","setRobots","useEffect","fetch","response","json","filterRobots","filter","toLowerCase","includes","length","event","target","value","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAYeA,G,YAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,cCLDQ,EAAO,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,GAAIC,EAA4B,EAA5BA,KAAgBC,GAAY,EAAtBC,SAAsB,EAAZD,OACzC,OACE,sBAAKE,UAAU,sDAAf,UACE,qBAAKC,IAAG,+BAA0BL,EAA1B,aAAyCM,IAAI,WACrD,gCACE,6BAAKL,IACL,4BAAIC,WCJCK,EAAW,SAAC,GAEvB,OAFsC,EAAbC,OAEXC,KAAI,SAACC,GACjB,OACE,cAAC,EAAD,CAEEV,GAAIU,EAAMV,GACVC,KAAMS,EAAMT,KACZE,SAAUO,EAAMP,SAChBD,MAAOQ,EAAMR,OAJRQ,EAAMV,QCPNW,EAAY,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC1B,OACE,qBAAKR,UAAU,MAAf,SACE,uBACEA,UAAU,mCACVS,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCPLI,EAAS,SAACC,GACrB,OACE,qBACEC,MAAO,CACLC,UAAW,SACXC,OAAQ,kBACRC,OAAQ,SAJZ,SAOGJ,EAAMK,Y,4BCTQC,E,kDACnB,WAAYN,GAAQ,IAAD,8BACjB,cAAMA,IACDO,MAAQ,CACXC,UAAU,GAHK,E,qDAOnB,SAAkBC,EAAOC,GACvBC,KAAKC,SAAS,CAAEJ,UAAU,IAC1BK,QAAQC,IAAIL,GACZI,QAAQC,IAAIJ,K,oBAGd,WACE,OACE,8BACGC,KAAKX,MAAMQ,SACV,yDAEAG,KAAKX,MAAMK,e,GApBqBU,aCK7BC,G,MAAM,WACjB,MAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAA4BF,mBAAS,IAArC,mBAAO1B,EAAP,KAAe6B,EAAf,KAMAC,qBAAU,WACRC,MAAM,8CACH9C,MAAK,SAAC+C,GAAD,OAAcA,EAASC,UAC5BhD,MAAK,SAACgD,GAAD,OAAUJ,EAAUI,QAC3B,IAEH,IAAMC,EAAelC,EAAOmC,QAAO,SAACjC,GAClC,OAAOA,EAAMT,KAAK2C,cAAcC,SAASV,EAAYS,kBAGvD,OACE,8BACIpC,EAAOsC,OAGP,sBAAK1C,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWQ,OArBI,SAACmC,GACtBX,EAAeW,EAAMC,OAAOC,UAqBtB,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAUzC,OAAQkC,WAPxB,gDCpBRQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BhE,M","file":"static/js/main.c2c65214.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\n\nexport const Card = ({ id, name, username, email }) => {\n  return (\n    <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\n      <img src={`https://robohash.org/${id}?200X200}`} alt=\"robots\" />\n      <div>\n        <h2>{name}</h2>\n        <p>{email}</p>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport { Card } from \"./Card\";\n\nexport const CardList = ({ robots }) => {\n  // if (true) throw new Error(\"nooooo\");\n  return robots.map((robot) => {\n    return (\n      <Card\n        key={robot.id}\n        id={robot.id}\n        name={robot.name}\n        username={robot.username}\n        email={robot.email}\n      />\n    );\n  });\n};\n","import React from \"react\";\n\nexport const SearchBox = ({ search }) => {\n  return (\n    <div className=\"pa2\">\n      <input\n        className=\"pa3 ba b--green bg-lightest-blue\"\n        type=\"search\"\n        placeholder=\"search robots\"\n        onChange={search}\n      />\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport const Scroll = (props) => {\n  return (\n    <div\n      style={{\n        overflowY: \"scroll\",\n        border: \"1px solid black\",\n        height: \"600px\",\n      }}\n    >\n      {props.children}\n    </div>\n  );\n};\n","import React, { Component } from \"react\";\n\nexport default class ErrorBoundry extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false,\n    };\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({ hasError: true });\n    console.log(error);\n    console.log(info);\n  }\n\n  render() {\n    return (\n      <div>\n        {this.props.hasError ? (\n          <h1>Opps. There is an error</h1>\n        ) : (\n          this.props.children\n        )}\n      </div>\n    );\n  }\n}\n","import React, { useEffect, useState } from \"react\";\nimport { CardList } from \"../components/CardList\";\nimport { SearchBox } from \"../components/SearchBox\";\nimport { Scroll } from \"../components/Scroll\";\nimport ErrorBoundry from \"../components/ErrorBoundry\";\nimport \"./App.css\";\n\nexport const App = () => {\n  const [searchfield, setSearchField] = useState(\"\");\n  const [robots, setRobots] = useState([]);\n\n  const onSearchChange = (event) => {\n    setSearchField(event.target.value);\n  };\n\n  useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((json) => setRobots(json));\n  }, []);\n\n  const filterRobots = robots.filter((robot) => {\n    return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n  });\n\n  return (\n    <div>\n      {!robots.length ? (\n        <h1>Loading...</h1>\n      ) : (\n        <div className=\"tc\">\n          <h1 className=\"f1\">RoboFriends</h1>\n          <SearchBox search={onSearchChange} />\n          <Scroll>\n            <ErrorBoundry>\n              <CardList robots={filterRobots} />\n            </ErrorBoundry>\n          </Scroll>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"tachyons\";\n\nimport reportWebVitals from \"./reportWebVitals\";\nimport { App } from \"../src/containers/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}